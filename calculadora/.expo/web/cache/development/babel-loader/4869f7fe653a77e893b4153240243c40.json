{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { initialState } from \"./constants\";\nimport { actions } from \"./actions\";\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case actions.CLICK_NUMBER:\n      if (state.currentValue === '0' && action.value != '.') {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          currentValue: \"\" + action.value\n        });\n      }\n\n      if (action.value === '.' && state.pointCounter !== 0) {\n        return state;\n      }\n\n      if (action.value === '.') {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          currentValue: \"\" + state.currentValue + action.value,\n          pointCounter: 1\n        });\n      }\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        currentValue: \"\" + state.currentValue + action.value\n      });\n\n    case actions.CLICK_C:\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n\nexport { reducer, actions, initialState };","map":{"version":3,"sources":["D:/Hackademy/Mobile/calculadora/reducer/index.js"],"names":["initialState","actions","reducer","state","action","type","CLICK_NUMBER","currentValue","value","pointCounter","CLICK_C"],"mappings":";;;;;;AAAA,SAASA,YAAT;AACA,SAASC,OAAT;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAiB;AAC7B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKJ,OAAO,CAACK,YAAb;AAEI,UAAGH,KAAK,CAACI,YAAN,KAAuB,GAAvB,IAA8BH,MAAM,CAACI,KAAP,IAAgB,GAAjD,EAAqD;AACjD,+CACOL,KADP;AAEII,UAAAA,YAAY,OAAKH,MAAM,CAACI;AAF5B;AAIH;;AAED,UAAIJ,MAAM,CAACI,KAAP,KAAiB,GAAjB,IAAwBL,KAAK,CAACM,YAAN,KAAqB,CAAjD,EAAmD;AAE/C,eAAON,KAAP;AACH;;AAED,UAAGC,MAAM,CAACI,KAAP,KAAiB,GAApB,EAAwB;AACpB,+CACOL,KADP;AAEII,UAAAA,YAAY,OAAKJ,KAAK,CAACI,YAAX,GAA0BH,MAAM,CAACI,KAFjD;AAGIC,UAAAA,YAAY,EAAE;AAHlB;AAKH;;AAGD,6CACGN,KADH;AAEAI,QAAAA,YAAY,OAAKJ,KAAK,CAACI,YAAX,GAA0BH,MAAM,CAACI;AAF7C;;AAKJ,SAAKP,OAAO,CAACS,OAAb;AACI,aAAOV,YAAP;;AAEJ;AACI,aAAOG,KAAP;AAjCR;AAmCH,CApCD;;AAqCA,SAAQD,OAAR,EAAiBD,OAAjB,EAA0BD,YAA1B","sourcesContent":["import { initialState } from \"./constants\";\nimport { actions } from \"./actions\";\n\nconst reducer = (state, action)=>{\n    switch(action.type) {\n        case actions.CLICK_NUMBER:\n            //alert('Gu');\n            if(state.currentValue === '0' && action.value != '.'){\n                return{\n                    ...state,\n                    currentValue: `${action.value}`,\n                };\n            }\n\n            if (action.value === '.' && state.pointCounter!==0){\n                //ya hay un punto, no hacer nada\n                return state;\n            }\n\n            if(action.value === '.'){\n                return {\n                    ...state,\n                    currentValue: `${state.currentValue}${action.value}`,\n                    pointCounter: 1, //solo puede tener un punto\n                };\n            }\n\n            \n            return {\n            ...state,\n            currentValue: `${state.currentValue}${action.value}`,\n            };\n\n        case actions.CLICK_C:\n            return initialState;\n        \n        default:\n            return state;\n    }\n};\nexport {reducer, actions, initialState};"]},"metadata":{},"sourceType":"module"}